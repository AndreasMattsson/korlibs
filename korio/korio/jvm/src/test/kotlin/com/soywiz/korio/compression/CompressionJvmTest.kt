package com.soywiz.korio.compression

import com.soywiz.kmem.*
import com.soywiz.korio.async.*
import com.soywiz.korio.compression.deflate.*
import com.soywiz.korio.crypto.*
import kotlin.test.*

class CompressionJvmTest {
	val compressedData =
		Base64.decode("H4sIAAAAAAAAA+3SsREAEBSD4WcFm2ACTID9dxGFxgDcub/4mjQpEmdmDuYPKwsSJT3qz1KkXu7fWZMu4/IGr78AAAAAAD+a6ywcnAAQAAA=")
	val expectedData = "" +
			"1111111111111111111111111111111111111111111111111111111111111111111818181814950511111111111111111111111111818181816566671111111" +
			"1111111111111111118181811818283111111111111111111111111118181111111111111111111111111111111111111111111111111111111111111111111" +
			"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111" +
			"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111" +
			"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111" +
			"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111" +
			"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111" +
			"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111" +
			"111111111111111111111111111111"

	@Test
	fun gzipAsync() = suspendTest {
		val data = compressedData
		val res = data.uncompress(GZIP)
		val res2 = res.readIntArray_le(0, 4096 / 4)
		assertEquals(expectedData, res2.toList().joinToString(""))
	}

	@Test
	fun gzipSync() {
		val data = compressedData
		val res = data.syncUncompress(GZIP)
		val res2 = res.readIntArray_le(0, 4096 / 4)
		assertEquals(expectedData, res2.toList().joinToString(""))
	}
}