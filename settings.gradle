rootProject.name = 'korlibs-all'

def registerProject1(name, desc, rootPath = name) {
    include "$name-common", "$name", "$name-android", "$name-js", "$name-native"

    findProject(":$name-common")?.projectDir = file("$rootPath/$name/common")
    findProject(":$name")?.projectDir = file("$rootPath/$name/jvm")
    findProject(":$name-js")?.projectDir = file("$rootPath/$name/js")
    //findProject(":$name-native")?.projectDir = file("rootPath/$name/native")
}

def registerProject2(name, rootPath, desc) {
	registerProject1(name, desc, rootPath)
}

def registerProject2Jvm(name, rootPath, desc) {
	include name
	findProject(":$name")?.projectDir = file("$rootPath/$name")
}

registerProject1('kmem', 'Kmem: Fast memory for Kotlin Common (JVM and JS) using Buffers and Typed Arrays')
registerProject1('kds', 'Kds: Kotlin Data Structures for JVM, JS and Common')
registerProject1('klock', 'Klock: Consistent and portable date and time utilities for multiplatform kotlin')
registerProject1('kzlib', 'Kzlib: Port of zlib to kotlin common')
registerProject1('klogger', 'Klogger: Consistent and portable logger library for multiplatform kotlin')
registerProject1('korinject', 'Korinject: Portable Kotlin Common library to do asynchronous dependency injection')
registerProject1('korio', 'Korio: Kotlin cORoutines I/O : Streams + Async TCP Client/Server + Virtual File System for JVM, Node.JS and Browser')
registerProject1('korma', 'Korma: Math Utilities for Kotlin Common')
registerProject1('korim', 'Kotlin cORoutines IMaging utilities for Kotlin Common')
//registerProject1('korte', 'Korte: Asynchronous Template Engine for Kotlin')

registerProject1('korau', 'Korau: Kotlin cORoutines AUdio')
registerProject2('korau-mp3', 'korau', 'Korau: MP3 extension')
registerProject2('korau-ogg-vorbis', 'korau', 'Korau: OGG Vorbis extension')

registerProject1('korag', 'Korag: Kotlin cORoutines Accelerated Graphics')
registerProject1('korui', 'Korui: Kotlin cORoutines User Interfaces for Kotlin Common')

registerProject1('korfl', 'Korfl: Parse Adobe Animate SWF files in JVM and JS')

registerProject1('korge', 'Korge: Kotlin cORoutines Game Engine')
registerProject2('korge-ext-fla', 'korge', 'Korge: Extension for fla files')
registerProject2('korge-ext-lipsync', 'korge', 'Korge: Extension for lipsync')
registerProject2('korge-ext-particle', 'korge', 'Korge: Extension for particle system')
registerProject2('korge-ext-spriter', 'korge', 'Korge: Extension for spriter')
registerProject2('korge-ext-swf', 'korge', 'Korge: Extension for SWF')
registerProject2('korge-ext-tiled', 'korge', 'Korge: Extension for tiled maps')
registerProject2('korge-ext-ui', 'korge', 'Korge: Extension implementing Korui')

registerProject1('kbignum', 'KBigNum: Big Numbers for multiplatform Kotlin')
registerProject1('dynarek', 'Dynarek: Dynamic recompilation for Kotlin Common (JS and JVM)')
registerProject1('krypto', 'Krypto: Pure Kotlin cryptography library for JVM, JS and Common')

registerProject1('kmedialayer', 'Kmedialayer: Portable layer for multimedia applications')
registerProject2Jvm('kmedialayer-generator', 'kmedialayer', 'Kmedialayer generator')
